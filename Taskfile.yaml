version: '3'

tasks:
  up:
    cmds:
      - bundle install
      - docker compose up --build -d
      - echo "Up and running!"
      - |
          if [ -n "$(rails db:exists)" ]; then
            echo "Database already exists. Skipping creation."
          else
            bundle exec rails db:create
          fi
      - docker compose exec api bundle exec rails db:migrate db:seed
      - docker cp $(docker-compose ps -q api):rails/app ./

  down:
    cmds:
      - docker compose down

  stop:
    cmds:
      - docker compose stop

  start:
    cmds:
      - docker compose up --build -d

  teardown:
    cmds:
      - docker compose up --build -d
      - docker compose exec api bundle exec rails db:drop
      - docker compose down

  rebuild-db:
    cmds:
      - docker compose up --build -d
      - |
          if [ -n "$(rails db:exists)" ]; then
            docker compose exec api bundle exec rails db:drop
          else
            echo "Database does not exist. Skipping deletion."
          fi
      - docker compose exec api bundle exec rails db:create
      - docker compose exec api bundle exec rails db:migrate db:seed
      - docker cp $(docker-compose ps -q api):rails/app ./

  annotate:
    cmds:
      - docker compose exec api bundle exec annotate
      - docker cp $(docker-compose ps -q api):rails/app ./

  format:
    cmds:
      - bundle exec rubocop -A

  lint:
    cmds:
      - bundle exec rubocop

  # Task with variables
  migrate:
    cmds:
      - docker compose exec api bundle exec rails db:migrate db:seed
      - docker cp $(docker-compose ps -q api):rails/db/schema.rb ./db/schema.rb
      - docker compose exec api bundle exec annotate
      - docker cp $(docker-compose ps -q api):rails/app ./

  console:
    cmds:
      - docker compose exec api bundle exec rails console

  logs:
    cmds:
      - docker compose logs --follow

  attach:
    cmds:
      - docker attach $(docker-compose ps -q api)
